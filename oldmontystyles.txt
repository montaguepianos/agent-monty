<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Monty - The Helper Robot</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f0f0;
        }
        .chat-container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        .chat-header {
            background: #2c3e50;
            color: white;
            padding: 15px;
            text-align: center;
            font-size: 1.2em;
        }
        .chat-messages {
            height: 400px;
            overflow-y: auto;
            padding: 20px;
        }
        .message {
            margin-bottom: 15px;
            padding: 10px;
            border-radius: 5px;
            max-width: 80%;
        }
        .user-message {
            background: #3498db;
            color: white;
            margin-left: auto;
        }
        .bot-message {
            background: #f1f1f1;
            color: #333;
        }
        .input-container {
            padding: 20px;
            border-top: 1px solid #eee;
            display: flex;
            gap: 10px;
        }
        #user-input {
            flex: 1;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 1em;
        }
        button {
            padding: 10px 20px;
            background: #2c3e50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1em;
        }
        button:hover {
            background: #34495e;
        }
        button:disabled {
            background: #ccc;
            cursor: not-allowed;
        }
        .play-button {
            background: #27ae60;
            padding: 5px 10px;
            font-size: 0.8em;
            margin-top: 5px;
        }
        .play-button:hover {
            background: #219a52;
        }
        .typing-indicator {
            display: none;
            padding: 10px;
            background: #f1f1f1;
            border-radius: 5px;
            margin-bottom: 15px;
            max-width: 80%;
        }
        .typing-indicator span {
            display: inline-block;
            width: 8px;
            height: 8px;
            background: #666;
            border-radius: 50%;
            margin-right: 5px;
            animation: typing 1s infinite;
        }
        .typing-indicator span:nth-child(2) { animation-delay: 0.2s; }
        .typing-indicator span:nth-child(3) { animation-delay: 0.4s; }
        @keyframes typing {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-5px); }
        }
        .error-message {
            color: #e74c3c;
            background: #fde8e8;
            padding: 10px;
            border-radius: 5px;
            margin: 10px 0;
            display: none;
        }
    </style>
</head>
<body>
    <div class="chat-container">
        <div class="chat-header">
            Monty - The Helper Robot
        </div>
        <div class="chat-messages" id="chat-messages">
            <div class="message bot-message">
                Hello! I'm Monty, your friendly helper robot at Montague Pianos. How can I assist you today?
            </div>
            <div class="typing-indicator" id="typing-indicator">
                <span></span>
                <span></span>
                <span></span>
            </div>
        </div>
        <div class="error-message" id="error-message"></div>
        <div class="input-container">
            <input type="text" id="user-input" placeholder="Type your message here..." autocomplete="off">
            <button onclick="sendMessage()" id="send-button">Send</button>
        </div>
    </div>

    <script>
        // Update this to your PHP proxy URL
        const API_ENDPOINT = 'https://www.montaguepianos.co.uk/chatbotproxy.php';
        
        let currentAudio = null;
        let audioStarted = false;
        let audioData = null;

        // Handle Enter key press
        document.getElementById('user-input').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });

        function showError(message) {
            const errorDiv = document.getElementById('error-message');
            errorDiv.textContent = message;
            errorDiv.style.display = 'block';
            setTimeout(() => {
                errorDiv.style.display = 'none';
            }, 5000);
        }

        function sendMessage() {
            const input = document.getElementById('user-input');
            const message = input.value.trim();
            
            if (!message) return;
            
            // Disable input and button while processing
            input.disabled = true;
            document.getElementById('send-button').disabled = true;
            
            // Add user message to chat
            addMessage(message, 'user');
            input.value = '';
            
            // Show typing indicator
            document.getElementById('typing-indicator').style.display = 'block';
            
            // Send message to API
            fetch(API_ENDPOINT, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify({ message: message })
            })
            .then(response => {
                console.log('Response status:', response.status);
                console.log('Response headers:', Object.fromEntries(response.headers.entries()));
                
                if (!response.ok) {
                    return response.text().then(text => {
                        console.error('Error response:', text);
                        throw new Error(`HTTP error! status: ${response.status}, message: ${text}`);
                    });
                }
                return response.json();
            })
            .then(data => {
                console.log('Received data:', data);
                // Hide typing indicator
                document.getElementById('typing-indicator').style.display = 'none';
                
                if (data.error) {
                    showError(data.error);
                    return;
                }
                
                // Store audio data
                audioData = data.audio;
                audioStarted = false;
                
                // Add bot message and start typing animation
                addMessage(data.reply, 'bot');
            })
            .catch(error => {
                console.error('Error details:', error);
                document.getElementById('typing-indicator').style.display = 'none';
                showError(`Sorry, I encountered an error: ${error.message}`);
            })
            .finally(() => {
                // Re-enable input and button
                input.disabled = false;
                document.getElementById('send-button').disabled = false;
                input.focus();
            });
        }

        function addMessage(text, sender) {
            const messagesDiv = document.getElementById('chat-messages');
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${sender}-message`;
            
            // Create text container
            const textContainer = document.createElement('div');
            textContainer.textContent = text;
            messageDiv.appendChild(textContainer);
            
            // Add play button if it's a bot message and we have audio
            if (sender === 'bot' && audioData) {
                const playButton = document.createElement('button');
                playButton.className = 'play-button';
                playButton.textContent = audioStarted ? 'Pause' : 'Play';
                playButton.onclick = () => toggleAudio(playButton);
                messageDiv.appendChild(playButton);
            }
            
            messagesDiv.appendChild(messageDiv);
            messagesDiv.scrollTop = messagesDiv.scrollHeight;
        }

        function toggleAudio(button) {
            if (!currentAudio) {
                // Create new audio element
                currentAudio = new Audio(`data:audio/mp3;base64,${audioData}`);
                currentAudio.volume = 0.5;
                
                currentAudio.onended = () => {
                    audioStarted = false;
                    button.textContent = 'Play';
                };
            }
            
            if (audioStarted) {
                currentAudio.pause();
                button.textContent = 'Play';
            } else {
                currentAudio.play();
                button.textContent = 'Pause';
            }
            
            audioStarted = !audioStarted;
        }

        // Focus input on page load
        document.getElementById('user-input').focus();
    </script>
</body>
</html>
